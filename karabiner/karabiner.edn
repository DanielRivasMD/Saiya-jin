
{:profiles

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; PROFILE
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; !  | means mandatory
;; #  | means optional
;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option
;; R  | right_shift
;; P  | caps_lock
;; !! | mandatory command + control + optional + shift (hyper)
;; ## | optional any

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

{:Default
 {:default true
  :sim     50      ; simultaneous_threshold_milliseconds (def: 50)                                 ;
                   ; keys need to be pressed within this threshold to be considered simultaneous   ;
  :delay   300     ; to_delayed_action_delay_milliseconds (def: 500)                               ;
                   ; basically it means time after which the key press is count delayed            ;
  :alone   300     ; to_if_alone_timeout_milliseconds (def: 1000)                                  ;
                   ; hold for 995s and single tap registered; hold for 1005s and seen as modifier  ;
  :held    500     ; to_if_held_down_threshold_milliseconds (def: 500)                             ;
                   ; key is fired twice when 500 ms is elapsed (otherwise seen as a hold command)  ;
  }}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

:applications
{;
 :browser ["company.thebrowser.Browser"]                                                           ;
 :finder ["com.apple.finder"]                                                                      ;
 :mail ["io.canarymail.mac"]                                                                       ;
 :skim ["net.sourceforge.skim-app.skim"]                                                           ;
 :term ["org.alacritty"]                                                                           ;
 :zoom ["us.zoom.xos"]                                                                             ;
 }

:devices
{;
 :pro [{:vendor_id 1452 :product_id 832}]                                                          ;
 :air [{:vendor_id 1452 :product_id 641}]                                                          ;
 :master [{:vendor_id 1133 :product_id 45915}]                                                     ;
 }

:templates
{;
 :launch "osascript -e 'tell application \"%s\" to activate'"                                      ;
 }

:layers
{;
 :zero-mode {:key :keypad_num_lock}                                                                ;

 :q-mode {:key :q}
 :w-mode {:key :w}

 :j-mode {:key :j}
 :k-mode {:key :k}

 :z-mode {:key :z}
 :x-mode {:key :x}

 :obracket-mode {:key :open_bracket}                       ; '[' + letter = rust snippet           ;
 :cbracket-mode {:key :close_bracket}                      ; ']' + letter = go snippet             ;

 :semicolon-mode {:key :semicolon}                         ; ';' + letter = umlaut                 ;
 :quote-mode {:key :quote}                                 ; ''' + letter = circumflex             ;
 :backslash-mode {:key :backslash}                         ; '\' + letter = grave accent           ;

 :comma-mode {:key :comma}                                 ; ',' + letter = empty                  ;
 :period-mode {:key :period}                               ; '.' + letter = empty                  ;
 :slash-mode {:key :slash}                                 ; '/' + letter = acute accent           ;
}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

:main [

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; browser
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; TODO: update config

; browser
{:des "Browser vimium mappings"
 :rules
 [;
  [:#Pright_shift :right_shift [:browser] {:alone [:!Of1]}]                    ; focus             ;

  [:!EWQ#Pdelete_or_backspace :!Of2 [:browser]]                                ; copy link         ;
  [:!EWQ#Pright_option :!Of3 [:browser]]                                       ; down link         ;

  [:!EWQ#Preturn_or_enter :!Of4 [:browser]]                                   ; current tab       ;

  [:!EWQ#Pright_shift :!Of5 [:browser]]                                       ; new tab           ;
  [:!EWQ#Pright_command :!Of6 [:browser]]                                     ; multitab          ;

  [:!EWQ#Pspacebar :!Of7 [:browser]]                                   ;

  [:!OC#Pspacebar [:!Of8] [:browser]]                                                  ;

  [:!R#Pup_arrow [:!Of9] [:browser]]                                                  ;
  [:!R#Pdown_arrow [:!Of10] [:browser]]                                                  ;

  [:!EWQ#Pup_arrow :!Of11 [:browser]]                                   ;
  [:!EWQ#Pdown_arrow :!Of12 [:browser]]                                   ;
  ]}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; browser
{:des "Browser overwrite Arc"
 :rules
 [;
  [:!T#Pspacebar [:!Cs] [:browser]]                                            ; sidebar
  [:!C#Preturn_or_enter [:!Co] [:browser]]                                     ; fuse

  [:!OC#P1 [:!T1] [:browser]]                                                  ; work space        ;
  [:!OC#P2 [:!T2] [:browser]]                                                  ; work space        ;
  [:!OC#P3 [:!T3] [:browser]]                                                  ; work space        ;
  [:!OC#P4 [:!T4] [:browser]]                                                  ; work space        ;
  [:!OC#P5 [:!T5] [:browser]]                                                  ; work space        ;

  [:!OC#Pkeypad_1 [:!T1] [:browser]]                                           ; work space        ;
  [:!OC#Pkeypad_2 [:!T2] [:browser]]                                           ; work space        ;
  [:!OC#Pkeypad_3 [:!T3] [:browser]]                                           ; work space        ;
  [:!OC#Pkeypad_4 [:!T4] [:browser]]                                           ; work space        ;
  [:!OC#Pkeypad_5 [:!T5] [:browser]]                                           ; work space        ;

  [:!OC#Pdelete_or_backspace [:!Cw] [:browser]]                                           ; close tab
  [:!OC#Preturn_or_enter [:!OCn] [:browser]]                                   ; little arc        ;
  [:!OC#Pright_shift [:!Ct] [:browser]]                              ; new tab
  [:!OC#Pright_command [:!STCr] [:browser]]                                           ; rename
  [:!OC#Pright_option [:!SCt] [:browser]]                                                  ; restore tab

  [:!OT#Pdelete_or_backspace [:!TShyphen] [:browser]]                          ; close split       ;
  [:!OT#Pright_shift [:!TSequal_sign] [:browser]]                              ; new split         ;
  [:!OT#Pright_option [:!STCv] [:browser]]                                           ; segregate split
  [:!OT#Pleft_arrow [:!TSopen_bracket] [:browser]]                             ; left split        ;
  [:!OT#Pright_arrow [:!TSclose_bracket] [:browser]]                           ; right split       ;

  [:!OTC#Pdelete_or_backspace [:!SCk] [:browser]]                                ; clean unpinned
  [:!OTC#Pspacebar [:!Cd] [:browser]]                                    ; pin
  [:!OTC#Preturn_or_enter [:!Cn] [:browser]]                                          ; new duplicate window            ;

  [:!EWQ#Pleft_arrow [:!Copen_bracket] [:browser]]                             ; backward          ;
  [:!EWQ#Pright_arrow [:!Cclose_bracket] [:browser]]                           ; forward           ;

  [:!TC#Pdelete_or_backspace [:!SCw] [:browser]]                                ; close window
  [:!TC#Preturn_or_enter [:!TCn] [:browser]]                                          ; new window            ;
  [:!TC#Pright_shift [:!Cy] [:browser]]                           ; history
  [:!TC#Pright_option [:!SCj] [:browser]]                           ; downloads
  [:!TC#Pright_command [:!STCa] [:browser]]                                           ; archives
  [:!TC#Pspacebar [:!STs] [:browser]]                                    ; spaces

  ; [:!OS#Pd [:!OSd] [:browser]]                                                 ; duplicate         ;

  [:!O#Pright_control [:!Cl] [:browser]]                                                  ; cmd bar

  [:!W#Pright_shift [:!Cf] [:browser]]                                                  ; find
  [:!W#Pspacebar [:!Cj] [:browser]]                                                  ; jump
  [:!O#Ph [:!Cg] [:browser]]                                                  ; find next
  [:!O#Pl [:!SCg] [:browser]]                                                  ; find prev

  ; [:!O#Pr [:!Cr] [:browser]]                                    ; refresh
  ; [:!O#Pt [:!SCd] [:browser]]                                    ; toolbar
  [:!O#Pc [:!SCc] [:browser]]                                                  ; copy url
  [:!SO#Pc [:!SOCc] [:browser]]                                                  ; copy url markdown

  ; [:!C#P0 [:!C9] [:browser]]                                                  ; go last tab
  ]}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; finder
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; finder
{:des "Finder"
 :rules
 [;
  [:!EWQ#Pleft_arrow [:!Copen_bracket] [:finder]]          ;                                       ;
  [:!EWQ#Pright_arrow [:!Cclose_bracket] [:finder]]        ;                                       ;
  [:!T#Pspacebar [:!TCs] [:finder]]                        ;                                       ;
  ]}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; TODO: update
; ; mail
; {:des "Mail bindings"
;  :rules
;  [;
;   [:!C#Preturn_or_enter :!CSd [:mail]]                                         ; send              ;
;   [:!O#Preturn_or_enter :!Cr [:mail]]                                          ; reply             ;
;   [:!OS#Preturn_or_enter :!CSr [:mail]]                                        ; reply all         ;
;   [:!OC#Preturn_or_enter :!CSf [:mail]]                                        ; forward           ;
;   [:!EQR#Preturn_or_enter :!Cn [:mail]]                                        ; new               ;
;   [:!EQR#Pspacebar :!CSj [:mail]]                                              ; junk              ;
;   [:!T#Pspacebar :!CSu [:mail]]                                                ; unread            ;
;   [:!S#Pspacebar :!CSl [:mail]]                                                ; flag              ;
;   [:!C#Pspacebar :!CSn [:mail]]                                                ; get               ;
;   [:!O#Pf :!OCf [:mail]]                                                       ; find mail         ;
;   [:!OS#Pf :!Cf [:mail]]                                                       ; find              ;
;   [:!O#Ph :!CSg [:mail]]                                                       ; find prev         ;
;   [:!O#Pl :!Cg [:mail]]                                                        ; find next         ;
;   [:!!#Pup_arrow :!TCopen_bracket [:mail]]                                     ; mailbox prev      ;
;   [:!!#Pdown_arrow :!TCclose_bracket [:mail]]                                  ; mailbox next      ;
;   ]}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; zoom
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; TODO: homogenize to format
; zoom
{:des ""
 :rules
 [;
  ; mute / unmute
  [:!C#Pspacebar :!SC#Pa [:zoom]]                                                                  ;

  ; camera on / off
  [:!T#Pspacebar :!SC#Pv [:zoom]]                                                                  ;

  ; text show
  [:#Pright_shift :right_shift [:zoom] {:alone [:!SC#Ph]}]                                         ;
  ]}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

 ; {:des "Double function - Press twice to enter double mode, press once to leave"
 ;  :rules [
 ;   [:f20 ["double-function-mode" 1] ["function-pressed-once" 1]]
 ;   [:f20 [:f20 ["function-pressed-once" 1]] ["double-function-mode" 0] {:delayed {:invoked ["function-pressed-once" 0] :canceled ["function-pressed-once" 0]}}]

 ;   :double-function-mode
 ;   [:f20 ["double-function-mode" 0]]

 ;   [:#Pkeypad_slash [:spacebar :slash :spacebar]]      ;
 ;   [:#Pkeypad_asterisk  [:spacebar :!S8 :spacebar]]    ;
 ;   [:#Pkeypad_hyphen [:spacebar :hyphen :spacebar]]
 ;   [:#Pkeypad_plus [:spacebar :!Sequal_sign :spacebar]]
 ;   [:#Pkeypad_enter [:spacebar :equal_sign :spacebar]]

 ;   [:!S#Pkeypad_slash [:spacebar :period :slash :spacebar]]      ;
 ;   [:!S#Pkeypad_asterisk  [:spacebar :period :!S8 :spacebar]]    ;
 ;   [:!S#Pkeypad_hyphen [:spacebar :period :hyphen :spacebar]]
 ;   [:!S#Pkeypad_plus [:spacebar :period :!Sequal_sign :spacebar]]
 ;   [:!S#Pkeypad_enter [:spacebar :period :equal_sign :spacebar]]
 ;   ]}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

 ; {:des "Press twice to enter double mode, press once to leave"
 ;  :rules [
 ;   [:!C#Pspacebar ["double-command-mode" 1] ["command-pressed-once" 1]]
 ;   [:!C#Pspacebar [:!C#Pspacebar ["command-pressed-once" 1]] ["double-command-mode" 0] {:delayed {:invoked ["command-pressed-once" 0] :canceled ["command-pressed-once" 0]}}]

 ;   :double-command-mode
 ;   [:!C#Pspacebar ["double-command-mode" 0]]

 ;  [:#Pa [:!Ssemicolon :semicolon :a :!Ssemicolon]]                           ; αλφα              ; 'α'
 ;  [:#Pb [:!Ssemicolon :semicolon :b :!Ssemicolon]]                           ; βητα              ; 'β'
 ;  [:#Pc [:!Ssemicolon :semicolon :c :!Ssemicolon]]                           ; σιγμα             ; 'ς'
 ;  [:#Pd [:!Ssemicolon :semicolon :d :!Ssemicolon]]                           ; δελτα             ; 'δ'
 ;  [:#Pe [:!Ssemicolon :semicolon :e :!Ssemicolon]]                           ; εψιλον            ; 'ε'
 ;  [:#Pf [:!Ssemicolon :semicolon :f :!Ssemicolon]]                           ; φι                ; 'φ'
 ;  [:#Pg [:!Ssemicolon :semicolon :g :!Ssemicolon]]                           ; γαμμα             ; 'γ'
 ;  [:#Ph [:!Ssemicolon :semicolon :h :!Ssemicolon]]                           ; ητα               ; 'η'
 ;  [:#Pi [:!Ssemicolon :semicolon :i :!Ssemicolon]]                           ; ιωτα              ; 'ι'
 ;  [:#Pj [:!Ssemicolon :semicolon :j :!Ssemicolon]]                           ; ξι                ; 'ξ'
 ;  [:#Pk [:!Ssemicolon :semicolon :k :!Ssemicolon]]                           ; καππα             ; 'κ'
 ;  [:#Pl [:!Ssemicolon :semicolon :l :!Ssemicolon]]                           ; λαμβδα            ; 'λ'
 ;  [:#Pm [:!Ssemicolon :semicolon :m :!Ssemicolon]]                           ; μυ                ; 'μ'
 ;  [:#Pn [:!Ssemicolon :semicolon :n :!Ssemicolon]]                           ; νυ                ; 'ν'
 ;  [:#Po [:!Ssemicolon :semicolon :o :!Ssemicolon]]                           ; ομικρον           ; 'ο'
 ;  [:#Pp [:!Ssemicolon :semicolon :p :!Ssemicolon]]                           ; πι                ; 'π'
 ;  ; [:#Pq []]                                                                     DEFAULT        ;
 ;  [:#Pr [:!Ssemicolon :semicolon :r :!Ssemicolon]]                           ; ρω                ; 'ρ'
 ;  [:#Ps [:!Ssemicolon :semicolon :s :!Ssemicolon]]                           ; σιγμα             ; 'σ'
 ;  [:#Pt [:!Ssemicolon :semicolon :t :!Ssemicolon]]                           ; ταυ               ; 'τ'
 ;  [:#Pu [:!Ssemicolon :semicolon :u :!Ssemicolon]]                           ; θητα              ; 'Θ'
 ;  [:#Pv [:!Ssemicolon :semicolon :v :!Ssemicolon]]                           ; ωμεγα             ; 'ω'
 ;  [:#Pw [:!Ssemicolon :semicolon :w :!Ssemicolon]]                           ; ψι                ; 'ψ'
 ;  [:#Px [:!Ssemicolon :semicolon :x :!Ssemicolon]]                           ; χι                ; 'χ'
 ;  [:#Py [:!Ssemicolon :semicolon :y :!Ssemicolon]]                           ; υψιλον            ; 'υ'
 ;  [:#Pz [:!Ssemicolon :semicolon :z :!Ssemicolon]]                           ; ζητα              ; 'ζ'
 ;  [:#Pright_control [:!Ssemicolon :semicolon :q :!Ssemicolon]]               ; κοππα             ; 'ϙ'

 ;  [:!S#Pa [:!Ssemicolon :comma :a :!Ssemicolon]]                              ; a ogonek          ; 'ą'
 ;  [:!S#Pb [:!Ssemicolon :comma :b :!Ssemicolon]]                              ; eszett            ; 'ß'
 ;  [:!S#Pc [:!Ssemicolon :comma :c :!Ssemicolon]]                              ; c cedille         ; 'ç'
 ;  [:!S#Pd [:!Ssemicolon :comma :d :!Ssemicolon]]                              ; ΔEΛTA             ; 'Δ'
 ;  [:!S#Pe [:!Ssemicolon :comma :e :!Ssemicolon]]                              ; e ogonek          ; 'ę'
 ;  [:!S#Pf [:!Ssemicolon :comma :f :!Ssemicolon]]                              ; florin            ; 'ƒ'
 ;  [:!S#Pg [:!Ssemicolon :comma :g :!Ssemicolon]]                              ; e caron           ; 'ě'
 ;  [:!S#Ph [:!Ssemicolon :comma :h :!Ssemicolon]]                              ; cyrillic и        ; 'и'
 ;  [:!S#Pi [:!Ssemicolon :comma :i :!Ssemicolon]]                              ; i ogonek          ; 'į'
 ;  [:!S#Pj [:!Ssemicolon :comma :j :!Ssemicolon]]                              ; caret             ; 'ʌ'
 ;  [:!S#Pk [:!Ssemicolon :comma :k :!Ssemicolon]]                              ; phonetic ɒ        ; 'ɒ'
 ;  [:!S#Pl [:!Ssemicolon :comma :l :!Ssemicolon]]                              ; ΛAMBΔA            ; 'Λ'
 ;  [:!S#Pm [:!Ssemicolon :comma :m :!Ssemicolon]]                              ; meng              ; 'ɱ'
 ;  [:!S#Pn [:!Ssemicolon :comma :n :!Ssemicolon]]                              ; eng               ; 'ŋ'
 ;  [:!S#Po [:!Ssemicolon :comma :o :!Ssemicolon]]                              ; o ogonek          ; 'ǫ'
 ;  [:!S#Pp [:!Ssemicolon :comma :p :!Ssemicolon]]                              ; cyrillic п        ; 'п'
 ;  ; [:!S#Pq []]                                                                    DEFAULT        ;
 ;  [:!S#Pr [:!Ssemicolon :comma :r :!Ssemicolon]]                              ; cyrillic я        ; 'я'
 ;  [:!S#Ps [:!Ssemicolon :comma :s :!Ssemicolon]]                              ; ΣIΓMA             ; 'Σ'
 ;  ; [:!S#Pt [:!Ssemicolon :comma :t :!Ssemicolon]]                            ;                   ;    
 ;  [:!S#Pu [:!Ssemicolon :comma :u :!Ssemicolon]]                              ; u ogonek          ; 'ų'
 ;  [:!S#Pv [:!Ssemicolon :comma :v :!Ssemicolon]]                              ; ΩMEΓA             ; 'Ω'
 ;  [:!S#Pw [:!Ssemicolon :comma :w :!Ssemicolon]]                              ; πωμεγα            ; 'ϖ'
 ;  [:!S#Px [:!Ssemicolon :comma :x :!Ssemicolon]]                              ; yogh              ; 'ʒ'
 ;  [:!S#Pw [:!Ssemicolon :comma :y :!Ssemicolon]]                              ; eł                ; 'ł'
 ;  [:!S#Pz [:!Ssemicolon :comma :z :!Ssemicolon]]                              ; cyrillic з        ; 'з'
 ;  [:!S#Pright_control [:!Ssemicolon :comma :q :!Ssemicolon]]                  ; ø                 ; 'ø'
 ;  ]}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

 ; {:des "Press twice to enter double mode, press once to leave"
 ;  :rules [
 ;   [:!SC#Pspacebar ["double-right-shift-mode" 1] ["shift-pressed-once" 1]]
 ;   [:!SC#Pspacebar [:!SC#Pspacebar ["shift-pressed-once" 1]] ["double-right-shift-mode" 0] {:delayed {:invoked ["shift-pressed-once" 0] :canceled ["shift-pressed-once" 0]}}]

 ;   :double-right-shift-mode
 ;   [:!SC#Pspacebar ["double-right-shift-mode" 0]]


 ;   ]}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; TODO: relocate
 ; {:des "Press twice to enter double mode, press once to leave"
 ;  :rules [
 ;   [:!ST#Pspacebar ["double-control-mode" 1] ["control-pressed-once" 1]]
 ;   [:!ST#Pspacebar [:!ST#Pspacebar ["control-pressed-once" 1]] ["double-control-mode" 0] {:delayed {:invoked ["control-pressed-once" 0] :canceled ["control-pressed-once" 0]}}]

 ;   :double-control-mode
 ;   [:!ST#Pspacebar ["double-control-mode" 0]]

 ;  ; zellij controls - alt
 ;  ; [:#Pleft_command :!SOa [:term]]                          ; cmd               ;                   ;
 ;  ; [:#Pcaps_lock :!SOb [:term]]                              ; alt               ;                   ;
 ;  ; [:#Pleft_option :!SOc [:term]]                           ; alt               ;                   ;
 ;  [:#Pright_option :!SOd [:term]]                          ; alt               ;                   ;
 ;  [:#Preturn_or_enter :!SOe [:term]]                       ; enter             ;                   ;
 ;  [:#Pright_shift :!SOf [:term]]                           ; shift             ;                   ;
 ;  [:#Pright_command :!SOg [:term]]                         ; cmd               ;                   ;
 ;  [:#Pspacebar :!SOh [:term]]                              ; spacebar          ;                   ;

 ;  ]}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Q
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

{:des "Q mode"
 :rules
 [:q-mode
  ;; find-till-char / repeat
  ^{:doc/actions [{:name "find-till-char-forward", :description "Find till character forward", :exec "find_till_char", :program "helix"}]} [:#Pleft_arrow [:!Tpage_up] [:term]]
  ^{:doc/actions [{:name "find-till-char-backward", :description "Find till character backward", :exec "till_prev_char", :program "helix"}]} [:#Pright_arrow [:!Tpage_down] [:term]]
 ; TODO: update temp mapping
  ^{:doc/actions [{:name "repeat-last-motion", :description "Repeat last movement", :exec "repeat_last_motion", :program "helix"}]} [:#Pspacebar [:f18] [:term]]

  ;; comment navigation
  ^{:doc/actions [{:name "prev-comment", :description "Go to previous comment", :exec "goto_prev_comment", :program "helix"}]} [:#Pup_arrow [:!Thome] [:term]]
  ^{:doc/actions [{:name "next-comment", :description "Go to next comment", :exec "goto_next_comment", :program "helix"}]} [:#Pdown_arrow [:!Tend] [:term]]

  ; language server
  ^{:doc/actions [{:name "rename-symbol", :description "Rename symbol", :exec "rename_symbol", :program "helix"}]} [:#Pn [:!TSf11] [:term]]
  ^{:doc/actions [{:name "symbol-picker", :description "Show symbol list", :exec "symbol_picker", :program "helix"}]} [:#Preturn_or_enter [:!TSf13] [:term]]
  ^{:doc/actions [{:name "goto-references", :description "Go to references", :exec "goto_reference", :program "helix"}]} [:#Pr [:!Tf16] [:term]]
  ^{:doc/actions [{:name "goto-definition", :description "Go to definition", :exec "goto_definition", :program "helix"}]} [:#Pd [:!Tf17] [:term]]
  ^{:doc/actions [{:name "goto-implementation", :description "Go to implementation", :exec "goto_implementation", :program "helix"}]} [:#Pi [:!TSf16] [:term]]
  ^{:doc/actions [{:name "goto-type-definition", :description "Go to type definition", :exec "goto_type_definition", :program "helix"}]} [:#Pt [:!TSf17] [:term]]]}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Z
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

{:des "Z mode"
 :rules
 [:z-mode
  ; ^{:doc/actions [{:name "goto-last-modification", :description "Jump to last modification", :exec "goto_last_modification", :program "helix"}]} []

  ;; undo / redo
  ^{:doc/actions [{:name "undo", :description "Undo last change", :program "helix"}]}   [:#Pleft_arrow [:!Opage_up] [:term]]
  ^{:doc/actions [{:name "redo", :description "Redo last undo", :program "helix"}]}   [:#Pright_arrow [:!Opage_down] [:term]]

  ;; change navigation
  ^{:doc/actions [{:name "prev-change", :description "Go to previous change", :exec "goto_prev_change", :program "helix"}]}   [:#Pup_arrow [:!Ohome] [:term]]
  ^{:doc/actions [{:name "next-change", :description "Go to next change", :exec "goto_next_change", :program "helix"}]}   [:#Pdown_arrow [:!Oend] [:term]]

  ;; diagnostics: prev / next / picker
  ^{:doc/actions [{:name "prev-diagnostic", :description "Go to previous diagnostic", :exec "goto_prev_diag", :program "helix"}]} [:#Pdelete_or_backspace [:!Tf11] [:term]]
  ^{:doc/actions [{:name "next-diagnostic", :description "Go to next diagnostic", :exec "goto_next_diag", :program "helix"}]} [:#Pright_shift [:!Tf12] [:term]]
  ^{:doc/actions [{:name "diagnostics-picker", :description "Open diagnostics picker", :exec "diagnostics_picker", :program "helix"}]} [:#Preturn_or_enter [:!Tf13] [:term]]
  ^{:doc/actions [{:name "workspace-diagnostics-picker", :description "Workspace diagnostics picker", :exec "workspace_diagnostics_picker", :program "helix"}]} [:!S#Preturn_or_enter [:!Tf14] [:term]]]}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; MOUSE
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; mouse
{:des "Zero Mode - mouse"
 :rules
 [:zero-mode
  [:down_arrow {:mkey {:y 1500}}]                                                                  ;
  [:up_arrow {:mkey {:y -1500}}]                                                                   ;
  [:left_arrow {:mkey {:x -1500}}]                                                                 ;
  [:right_arrow {:mkey {:x 1500}}]                                                                 ;
  [:right_shift {:pkey :button1}]                                                              ;

  [:!Tdown_arrow {:mkey {:y 500}}]                                                                 ;
  [:!Tup_arrow {:mkey {:y -500}}]                                                                  ;
  [:!Tleft_arrow {:mkey {:x -500}}]                                                                ;
  [:!Tright_arrow {:mkey {:x 500}}]                                                                ;
  [:!Tright_shift {:pkey :button2}]                                                            ;
  ]}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ; SEMICOLON
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; ; semicolon
; {:des "Semicolon"
;  :rules [
;   [:a [:!Ou :a] [:semicolon-mode]]                                                                 ; ';' + a = ä
;   [:e [:!Ou :e] [:semicolon-mode]]                                                                 ; ';' + e = ë
;   [:i [:!Ou :i] [:semicolon-mode]]                                                                 ; ';' + i = ï
;   [:o [:!Ou :o] [:semicolon-mode]]                                                                 ; ';' + o = ö
;   [:u [:!Ou :u] [:semicolon-mode]]                                                                 ; ';' + u = ü
;   ]}

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; ; semicolon
; {:des "Semicolon"
;  :rules [
;   [{:key :a :modi :shift} [:!Ou :!Sa] [:semicolon-mode]]                                           ; ';' + A = Ä
;   [{:key :e :modi :shift} [:!Ou :!Se] [:semicolon-mode]]                                           ; ';' + E = Ë
;   [{:key :i :modi :shift} [:!Ou :!Si] [:semicolon-mode]]                                           ; ';' + I = Ï
;   [{:key :o :modi :shift} [:!Ou :!So] [:semicolon-mode]]                                           ; ';' + O = Ö
;   [{:key :u :modi :shift} [:!Ou :!Su] [:semicolon-mode]]                                           ; ';' + U = Ü
;   ]}

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ; QUOTE
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; ; quote
; {:des "Quote mode"
;  :rules [
;   [:a [:!Oi :a] [:quote-mode]]                                                                     ; ''' + a = â
;   [:e [:!Oi :e] [:quote-mode]]                                                                     ; ''' + e = ê
;   [:i [:!Oi :i] [:quote-mode]]                                                                     ; ''' + i = î
;   [:o [:!Oi :o] [:quote-mode]]                                                                     ; ''' + o = ô
;   [:u [:!Oi :u] [:quote-mode]]                                                                     ; ''' + u = û

;   [:n [:!On :n] [:quote-mode]]                                                                     ; ''' + n = ñ
;   ]}

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; ; quote
; {:des "Quote mode"
;  :rules [
;   [{:key :a :modi :shift} [:!Oi :!Sa] [:quote-mode]]                                               ; ''' + A = Â
;   [{:key :e :modi :shift} [:!Oi :!Se] [:quote-mode]]                                               ; ''' + E = Ê
;   [{:key :i :modi :shift} [:!Oi :!Si] [:quote-mode]]                                               ; ''' + I = Î
;   [{:key :o :modi :shift} [:!Oi :!So] [:quote-mode]]                                               ; ''' + O = Ô
;   [{:key :u :modi :shift} [:!Oi :!Su] [:quote-mode]]                                               ; ''' + U = Û

;   [{:key :n :modi :shift} [:!On :!Sn] [:quote-mode]]                                               ; ''' + n = Ñ
;   ]}

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ; BACKSLASH
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; ; backslash
; {:des "Backslash mode"
;  :rules [
;   [:a [:!Ograve_accent_and_tilde :a] [:backslash-mode]]                                            ; '\' + a = à
;   [:e [:!Ograve_accent_and_tilde :e] [:backslash-mode]]                                            ; '\' + e = è
;   [:i [:!Ograve_accent_and_tilde :i] [:backslash-mode]]                                            ; '\' + i = ì
;   [:o [:!Ograve_accent_and_tilde :o] [:backslash-mode]]                                            ; '\' + o = ò
;   [:u [:!Ograve_accent_and_tilde :u] [:backslash-mode]]                                            ; '\' + u = ù
;   ]}

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; ; backslash
; {:des "Backslash mode"
;  :rules [
;   [{:key :a :modi :shift} [:!Ograve_accent_and_tilde :!Sa] [:backslash-mode]]                      ; '\' + A = À
;   [{:key :e :modi :shift} [:!Ograve_accent_and_tilde :!Se] [:backslash-mode]]                      ; '\' + E = È
;   [{:key :i :modi :shift} [:!Ograve_accent_and_tilde :!Si] [:backslash-mode]]                      ; '\' + I = Ì
;   [{:key :o :modi :shift} [:!Ograve_accent_and_tilde :!So] [:backslash-mode]]                      ; '\' + O = Ò
;   [{:key :u :modi :shift} [:!Ograve_accent_and_tilde :!Su] [:backslash-mode]]                      ; '\' + U = Ù
;   ]}

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; ; SLASH
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; ; slash
; {:des "Slash mode"
;  :rules [
;   [:a [:!Oe :a] [:slash-mode]]                                                                     ; '/' + a = á
;   [:e [:!Oe :e] [:slash-mode]]                                                                     ; '/' + e = é
;   [:i [:!Oe :i] [:slash-mode]]                                                                     ; '/' + i = í
;   [:o [:!Oe :o] [:slash-mode]]                                                                     ; '/' + o = ó
;   [:u [:!Oe :u] [:slash-mode]]                                                                     ; '/' + u = ú
;   ]}

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; ; slash
; {:des "Slash mode"
;  :rules [
;   [{:key :a :modi :shift} [:!Oe :!Sa] [:slash-mode]]                                               ; '/' + A = Á
;   [{:key :e :modi :shift} [:!Oe :!Se] [:slash-mode]]                                               ; '/' + E = É
;   [{:key :i :modi :shift} [:!Oe :!Si] [:slash-mode]]                                               ; '/' + I = Í
;   [{:key :o :modi :shift} [:!Oe :!So] [:slash-mode]]                                               ; '/' + O = Ó
;   [{:key :u :modi :shift} [:!Oe :!Su] [:slash-mode]]                                               ; '/' + U = Ú
;   ]}

; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
